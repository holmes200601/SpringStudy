<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
    
    <context:component-scan base-package="restaurant.config">
    	<context:exclude-filter type="assignable" expression="restaurant.config.CentralServletConfig"/>
    </context:component-scan>
	<context:component-scan base-package="restaurant.frw" />
	<context:component-scan base-package="restaurant.srv" />
    
    <!-- Basic Datasource -->
	<bean name="mysqlConnectionPoolDataSource" class="com.mysql.jdbc.jdbc2.optional.MysqlConnectionPoolDataSource">
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/restaurantdb" />
		<property name="user" value="sampson" />
		<property name="password" value="sampson" />
	</bean>
	<!-- Pooled DataSource framework from common -->
	<bean id="dbcpDataSource" class="org.apache.commons.dbcp2.datasources.PerUserPoolDataSource" destroy-method="close">
		<property name="connectionPoolDataSource" ref="mysqlConnectionPoolDataSource" />
		<property name="description" value="True used data source by application layer." />
	</bean>
	
	<!-- SessionFactory -->
	<bean name="globalSessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dbcpDataSource" />
		<property name="configLocation" value="/WEB-INF/hibernate.cfg.xml" />
	</bean>
	
	<!-- HibernateTemplate -->
	<bean name="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="globalSessionFactory" />
		<property name="allowCreate" value="false" />
	</bean>
	
	<!-- Transaction Manager -->
	<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="globalSessionFactory" />
	</bean>
	
	<!-- Declaritive Tranaction Management -->
	<aop:config>
		<aop:pointcut id="txPoint" expression="execution(* restaurant.frw.spring.BeanFacadeImpl.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint" />
	</aop:config>
	
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<!-- 
			<tx:method name="doGet" isolation="READ_COMMITTED" propagation="REQUIRED" read-only="true" />
			<tx:method name="doPost" isolation="READ_COMMITTED" propagation="REQUIRES_NEW" />
			<tx:method name="doPut" isolation="READ_COMMITTED" propagation="REQUIRES_NEW" />
			<tx:method name="doDelete" isolation="READ_COMMITTED" propagation="REQUIRES_NEW" />
			 -->
			<tx:method name="load*" isolation="READ_COMMITTED" propagation="REQUIRED" read-only="true" />
			<tx:method name="save*" isolation="READ_COMMITTED" propagation="REQUIRES_NEW" />
		</tx:attributes>
	</tx:advice>
	
	<!-- Spring context interface -->
	<bean name="beanFacadeImpl" class="restaurant.frw.spring.BeanFacadeImpl" />
	
</beans>